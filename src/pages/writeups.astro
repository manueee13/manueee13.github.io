---
import BaseLayout from "../layouts/BaseLayout.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { getCollection } from "astro:content";

const ctfPosts = await getCollection("ctf");
const htbPosts = await getCollection("htb");

const resolveImagePath = (image?: string | null) => {
    if (!image) return null;
    const imagePath = image.trim();
    if (!imagePath) return null;
    if (imagePath.startsWith("http://") || imagePath.startsWith("https://")) return imagePath;
    if (imagePath.startsWith("//")) return `https:${imagePath}`;
    if (imagePath.startsWith("./")) return `/${imagePath.substring(2)}`;
    if (imagePath.startsWith("/")) return imagePath;
    return `/${imagePath}`;
};

// Group CTF by year and competition
const ctfByYear = ctfPosts.reduce((acc: Record<string, Record<string, Record<string, any[]>>>, post: any) => {
    const year = post.data.date.getFullYear().toString();
    if (!acc[year]) acc[year] = {};
    
    // Extract competition from frontmatter or fallback to slug prefix
    const competition = post.data.competition || post.data.organizer || post.slug.split('/')[0] || 'other';
    if (!acc[year][competition]) acc[year][competition] = {};
    
    // Categorize by challenge type
    const category = post.data.category || 'misc';
    if (!acc[year][competition][category]) acc[year][competition][category] = [];
    acc[year][competition][category].push(post);
    
    return acc;
}, {});

// Group HTB by type
const htbByType = htbPosts.reduce((acc: Record<string, any[]>, post: any) => {
    const type = post.data.category || 'other'; // season7, machines, challenges, sherlocks, etc.
    if (!acc[type]) acc[type] = [];
    acc[type].push(post);
    return acc;
}, {});

const ctfTimeline = Object.entries(ctfByYear)
    .sort(([yearA], [yearB]) => Number(yearB) - Number(yearA))
    .map(([year, competitions]) => {
        const competitionEntries = Object.entries(competitions).map(([competitionName, categories]) => {
            const allPosts = Object.values(categories).flat();
            const representativePost = allPosts[0];
            const logo =
                resolveImagePath(representativePost?.data?.ctfLogo || representativePost?.data?.image || null) ??
                "/favicon.svg";

            const categoryEntries = Object.entries(categories).map(([categoryName, posts]) => ({
                name: categoryName,
                posts
            }));

            const totalPosts = categoryEntries.reduce((sum, cat) => sum + cat.posts.length, 0);

            return {
                name: competitionName,
                logo,
                categories: categoryEntries,
                totalPosts
            };
        }).sort((a, b) => a.name.localeCompare(b.name, undefined, { sensitivity: "base" }));

        return { year, competitions: competitionEntries };
    });

const htbSections = Object.entries(htbByType)
    .map(([type, posts]) => ({
        type,
        posts: posts.map((post: any) => ({
            ...post,
            logo: resolveImagePath(post.data.logo || post.data.image || null) ?? "/favicon.svg"
        }))
    }))
    .sort((a, b) => a.type.localeCompare(b.type, undefined, { sensitivity: "base" }));
---

<BaseLayout title="Writeups - manueee13">
    <Header />
    <!-- Spacer per header fisso -->
    <div style="height: 80px;"></div>
    <main>
        <div class="container">

            <div class="writeups-columns">
                <section id="ctf" class="writeup-section ctf-column">
                    <h2 class="section-title">CTF Writeups</h2>

                    {ctfTimeline.length === 0 ? (
                        <div class="empty-state">
                            <p>ðŸš§ CTF writeups coming soon! ðŸš§</p>
                        </div>
                    ) : (
                        <div class="ctf-timeline">
                            {ctfTimeline.map(({ year, competitions }) => (
                                <div class="timeline-year">
                                    <div class="timeline-marker"></div>
                                    <div class="timeline-content">
                                        <h3 class="timeline-year-title">{year}</h3>

                                        <div class="timeline-competitions">
                                            {competitions.map(competition => (
                                                <details class="competition-panel">
                                                    <summary>
                                                        <img
                                                            src={competition.logo}
                                                            alt={`${competition.name} logo`}
                                                            class="competition-logo"
                                                            loading="lazy"
                                                            decoding="async"
                                                        />
                                                        <div class="competition-summary">
                                                            <span class="competition-name">{competition.name}</span>
                                                            <span class="competition-count">
                                                                {competition.totalPosts} writeup{competition.totalPosts !== 1 && "s"}
                                                            </span>
                                                        </div>
                                                        <span class="competition-chevron" aria-hidden="true">â€º</span>
                                                    </summary>

                                                    <div class="competition-categories">
                                                        {competition.categories.map(category => (
                                                            <div class="competition-category">
                                                                <h4 class="category-title">
                                                                    {category.name}
                                                                    <span class="badge">{category.posts.length}</span>
                                                                </h4>
                                                                <ul class="writeup-list">
                                                                    {category.posts.map(post => (
                                                                        <li>
                                                                            <a href={`/ctf/${post.slug}`} class="writeup-link">
                                                                                <div class="writeup-info">
                                                                                    <span class="writeup-title">{post.data.title}</span>
                                                                                    <span class="writeup-date">
                                                                                        {post.data.date.toLocaleDateString("en-US")}
                                                                                    </span>
                                                                                </div>
                                                                                {post.data.tags?.length && (
                                                                                    <div class="writeup-tags">
                                                                                        {post.data.tags.slice(0, 3).map(tag => (
                                                                                            <span class="tag">{tag}</span>
                                                                                        ))}
                                                                                    </div>
                                                                                )}
                                                                            </a>
                                                                        </li>
                                                                    ))}
                                                                </ul>
                                                            </div>
                                                        ))}
                                                    </div>
                                                </details>
                                            ))}
                                        </div>
                                    </div>
                                </div>
                            ))}
                        </div>
                    )}
                </section>

                <section id="htb" class="writeup-section htb-column">
                    <h2 class="section-title">HackTheBox Writeups</h2>

                    {htbSections.length === 0 ? (
                        <div class="empty-state">
                            <p>ðŸš§ HTB writeups coming soon! ðŸš§</p>
                        </div>
                    ) : (
                        <div class="htb-sections">
                            {htbSections.map(section => (
                                <div class="htb-section-card">
                                    <div class="section-header">
                                        <h3 class="htb-section-title">{section.type}</h3>
                                        <span class="section-count">{section.posts.length}</span>
                                    </div>

                                    <ul class="writeup-list">
                                        {section.posts.map(post => (
                                            <li>
                                                <a href={`/htb/${post.slug}`} class="writeup-link htb">
                                                    <img
                                                        src={post.logo}
                                                        alt={`${post.data.machine || post.data.title} logo`}
                                                        class="writeup-logo"
                                                        loading="lazy"
                                                        decoding="async"
                                                    />
                                                    <div class="writeup-info">
                                                        <span class="writeup-title">{post.data.title}</span>
                                                        <div class="writeup-meta">
                                                            {post.data.machine && (
                                                                <span class="machine-name">{post.data.machine}</span>
                                                            )}
                                                            {post.data.difficulty && (
                                                                <span class={`difficulty-badge ${post.data.difficulty.toLowerCase()}`}>
                                                                    {post.data.difficulty}
                                                                </span>
                                                            )}
                                                        </div>
                                                    </div>
                                                    <span class="writeup-date">
                                                        {post.data.date.toLocaleDateString("en-US")}
                                                    </span>
                                                </a>
                                            </li>
                                        ))}
                                    </ul>
                                </div>
                            ))}
                        </div>
                    )}
                </section>
            </div>
        </div>
    </main>
    <Footer />
</BaseLayout>

<style>
    .writeups-columns {
        display: grid;
        gap: 3rem;
        margin-top: 2.5rem;
    }

    @media (min-width: 1024px) {
        .writeups-columns {
            grid-template-columns: minmax(0, 1.3fr) minmax(0, 1fr);
        }
    }

    .writeup-section {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .section-title {
        font-size: 2.4rem;
        font-weight: 700;
        color: var(--text-primary);
        text-shadow: 0 0 18px rgba(255, 105, 180, 0.35);
    }

    .empty-state {
        background: var(--bg-card);
        border: 2px solid var(--border-subtle);
        border-radius: 20px;
        padding: 3rem;
        text-align: center;
        color: var(--text-muted);
        font-size: 1.2rem;
        font-family: "JetBrains Mono", monospace;
    }

    /* CTF timeline */
    .ctf-timeline {
        display: flex;
        flex-direction: column;
        gap: 3rem;
        position: relative;
    }

    .timeline-year {
        display: grid;
        grid-template-columns: auto 1fr;
        gap: 1.5rem;
        position: relative;
    }

    .timeline-marker {
        position: relative;
        width: 20px;
    }

    .timeline-marker::before {
        content: "";
        position: absolute;
        top: 4px;
        left: 50%;
        transform: translateX(-50%);
        width: 14px;
        height: 14px;
        border-radius: 50%;
        background: var(--accent-pink);
        box-shadow: 0 0 12px rgba(255, 105, 180, 0.7);
    }

    .timeline-marker::after {
        content: "";
        position: absolute;
        top: 20px;
        bottom: -30px;
        left: 50%;
        transform: translateX(-50%);
        width: 2px;
        background: var(--border-subtle);
    }

    .timeline-year:last-child .timeline-marker::after {
        display: none;
    }

    .timeline-content {
        background: var(--bg-card);
        border: 2px solid var(--border-subtle);
        border-radius: 22px;
        padding: 2rem;
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.25);
    }

    .timeline-year-title {
        font-size: 1.8rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        color: var(--accent-cyan);
    }

    .timeline-competitions {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .competition-panel {
        background: rgba(255, 255, 255, 0.03);
        border: 1px solid var(--border-subtle);
        border-radius: 18px;
        padding: 1.25rem 1.5rem;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

    .competition-panel[open] {
        border-color: var(--accent-pink);
        box-shadow: 0 12px 30px rgba(255, 105, 180, 0.18);
    }

    .competition-panel summary {
        display: flex;
        align-items: center;
        gap: 1rem;
        cursor: pointer;
        list-style: none;
    }

    .competition-panel summary::-webkit-details-marker {
        display: none;
    }

    .competition-logo {
        width: 56px;
        height: 56px;
        border-radius: 14px;
        background: rgba(255, 255, 255, 0.04);
        object-fit: contain;
        padding: 0.4rem;
        border: 1px solid rgba(255, 255, 255, 0.08);
    }

    .competition-summary {
        display: flex;
        flex-direction: column;
        gap: 0.35rem;
    }

    .competition-name {
        font-size: 1.2rem;
        font-weight: 600;
        color: var(--text-primary);
        text-transform: capitalize;
    }

    .competition-count {
        font-size: 0.9rem;
        color: var(--text-muted);
        font-family: "JetBrains Mono", monospace;
    }

    .competition-chevron {
        margin-left: auto;
        font-size: 1.6rem;
        color: var(--accent-pink);
        transform: rotate(-90deg);
        transition: transform 0.3s ease;
    }

    .competition-panel[open] .competition-chevron {
        transform: rotate(0deg);
    }

    .competition-categories {
        display: grid;
        gap: 1.5rem;
        margin-top: 1.5rem;
    }

    .competition-category {
        border-top: 1px solid rgba(255, 255, 255, 0.06);
        padding-top: 1.2rem;
    }

    .category-title {
        font-size: 1rem;
        font-weight: 600;
        color: var(--accent-cyan);
        display: flex;
        align-items: center;
        gap: 0.75rem;
        letter-spacing: 0.05em;
        text-transform: uppercase;
    }

    .badge {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        min-width: 28px;
        padding: 0.15rem 0.6rem;
        border-radius: 999px;
        background: rgba(255, 255, 255, 0.08);
        color: var(--text-primary);
        font-size: 0.75rem;
        font-family: "JetBrains Mono", monospace;
    }

    /* Shared writeup list */
    .writeup-list {
        list-style: none;
        display: flex;
        flex-direction: column;
        gap: 0.9rem;
        margin-top: 1rem;
    }

    .writeup-link {
        display: grid;
        grid-template-columns: minmax(0, 1fr) auto;
        gap: 1rem;
        align-items: center;
        text-decoration: none;
        padding: 1rem 1.2rem;
        border-radius: 14px;
        border: 1px solid transparent;
        background: rgba(255, 255, 255, 0.02);
        transition: border-color 0.3s ease, transform 0.2s ease, background 0.3s ease;
        color: var(--text-secondary);
    }

    .writeup-link:hover {
        border-color: var(--accent-pink);
        background: rgba(255, 105, 180, 0.08);
        color: var(--text-primary);
        transform: translateX(6px);
    }

    .writeup-link.htb {
        grid-template-columns: auto minmax(0, 1fr) auto;
        padding: 1rem 1.4rem;
        background: rgba(255, 255, 255, 0.03);
    }

    .writeup-logo {
        width: 52px;
        height: 52px;
        border-radius: 12px;
        object-fit: contain;
        background: rgba(255, 255, 255, 0.04);
        border: 1px solid rgba(255, 255, 255, 0.08);
        padding: 0.35rem;
    }

    .writeup-info {
        display: flex;
        flex-direction: column;
        gap: 0.45rem;
    }

    .writeup-title {
        font-weight: 600;
        font-size: 1.05rem;
        color: inherit;
    }

    .writeup-date {
        color: var(--text-muted);
        font-size: 0.9rem;
        font-family: "JetBrains Mono", monospace;
    }

    .writeup-tags {
        display: flex;
        gap: 0.4rem;
        flex-wrap: wrap;
    }

    .tag {
        padding: 0.2rem 0.65rem;
        border-radius: 999px;
        font-size: 0.75rem;
        font-family: "JetBrains Mono", monospace;
        background: rgba(0, 255, 255, 0.12);
        color: var(--accent-cyan);
        border: 1px solid rgba(0, 255, 255, 0.3);
    }

    .writeup-meta {
        display: flex;
        align-items: center;
        gap: 0.6rem;
        flex-wrap: wrap;
    }

    .machine-name {
        font-size: 0.85rem;
        color: var(--accent-purple);
        font-family: "JetBrains Mono", monospace;
    }

    .difficulty-badge {
        padding: 0.2rem 0.6rem;
        border-radius: 12px;
        font-size: 0.75rem;
        font-weight: 600;
        font-family: "JetBrains Mono", monospace;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .difficulty-badge.easy {
        background: rgba(0, 255, 255, 0.2);
        color: var(--accent-cyan);
        border: 1px solid var(--accent-cyan);
    }

    .difficulty-badge.medium {
        background: rgba(255, 165, 0, 0.2);
        color: #ffa500;
        border: 1px solid #ffa500;
    }

    .difficulty-badge.hard {
        background: rgba(255, 107, 107, 0.2);
        color: #ff6b6b;
        border: 1px solid #ff6b6b;
    }

    .difficulty-badge.insane {
        background: rgba(255, 20, 147, 0.2);
        color: var(--accent-magenta);
        border: 1px solid var(--accent-magenta);
    }

    /* HTB sections */
    .htb-sections {
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    .htb-section-card {
        background: var(--bg-card);
        border: 2px solid var(--border-subtle);
        border-radius: 22px;
        padding: 2rem;
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.25);
    }

    .section-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1.5rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.06);
        padding-bottom: 1rem;
    }

    .htb-section-title {
        font-size: 1.4rem;
        font-weight: 600;
        color: var(--text-primary);
        text-transform: capitalize;
    }

    .section-count {
        min-width: 32px;
        padding: 0.2rem 0.8rem;
        border-radius: 999px;
        background: rgba(255, 105, 180, 0.15);
        color: var(--accent-pink);
        font-size: 0.85rem;
        font-family: "JetBrains Mono", monospace;
        text-align: center;
    }

    /* Responsive */
    @media (max-width: 768px) {
        .writeups-columns {
            grid-template-columns: 1fr;
        }

        .timeline-content,
        .htb-section-card {
            padding: 1.75rem;
        }

        .competition-panel summary {
            align-items: flex-start;
        }

        .competition-chevron {
            font-size: 1.3rem;
        }

        .writeup-link,
        .writeup-link.htb {
            grid-template-columns: minmax(0, 1fr);
            gap: 0.75rem;
        }

        .writeup-link.htb {
            grid-template-columns: 1fr;
        }

        .writeup-logo {
            width: 48px;
            height: 48px;
        }

        .writeup-date {
            order: 3;
        }
    }
</style>